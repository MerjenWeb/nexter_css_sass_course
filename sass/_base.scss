// COLOR VARIABLES
$color-primary: #c69963;
$color-primary-dark: #b28451;

$color-secondary: #101d2c;

$color-grey-light-1: #f9f7f6;
$color-grey-light-2: #aaa;

$color-grey-dark-1: #54483a;
$color-grey-dark-2: #6d5d4b;

// FONT VARIABLES
$font-primary: "Nunito", serif;
$font-display: "Josefin Sans", serif;

// RESPONSIVE BREAKPOINTS
$bp-largest: 75em; // 1200px
$bp-large: 62.5em; // 1000px
$bp-medium: 50em; // 800px;
$bp-small: 37.5em; // 600px;

*,
*::before,
*::after {
	margin: 0;
	padding: 0;
	box-sizing: inherit;
}

html {
	box-sizing: border-box;
	font-size: 62.5%; // 10px/16px = 62.5% -> 1rem = 10px
}

body {
	font-family: $font-primary;
	color: $color-grey-dark-2;
	font-weight: 300;
	line-height: 1.6;
}

.container {
	display: grid;
	// 1. contain the content, 2. if we increase the content, we want the 2nd row (min-content) to grow with it
	// the default value is auto (adapts to the content) - which we could also put there
	grid-template-rows: 80vh min-content 40vw repeat(3, min-content);
	//it is very common in web design to use a design grid with 8 or 12 or 16 predefined columns
	// minmax(14rem) - maximum should be 14rem, but it can be lower, but not below the min-content (the minimum size that it should have to fit the content in there)
	grid-template-columns:
		[sidebar-start] 8rem [sidebar-end full-start] minmax(6rem, 1fr)
		[center-start] repeat(8, [col-start] minmax(min-content, 14rem) [col-end])
		[center-end]
		minmax(6rem, 1fr) [full-end];
}
